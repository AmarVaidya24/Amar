#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 8d57828c-e7ee-416e-b864-10fb85091c44
# Source File: logcopy.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2017 v5.4.144
     Generated on:       8/6/2018 7:49 PM
     Generated by:       Administrator
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2017
#>


#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Show-logcopy_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Define SAPIEN Types
	#----------------------------------------------
	try{
		[ProgressBarOverlay] | Out-Null
	}
	catch
	{
		Add-Type -ReferencedAssemblies ('System.Windows.Forms', 'System.Drawing') -TypeDefinition  @" 
		using System;
		using System.Windows.Forms;
		using System.Drawing;
        namespace SAPIENTypes
        {
		    public class ProgressBarOverlay : System.Windows.Forms.ProgressBar
	        {
                public ProgressBarOverlay() : base() { SetStyle(ControlStyles.OptimizedDoubleBuffer | ControlStyles.AllPaintingInWmPaint, true); }
	            protected override void WndProc(ref Message m)
	            { 
	                base.WndProc(ref m);
	                if (m.Msg == 0x000F)// WM_PAINT
	                {
	                    if (Style != System.Windows.Forms.ProgressBarStyle.Marquee || !string.IsNullOrEmpty(this.Text))
                        {
                            using (Graphics g = this.CreateGraphics())
                            {
                                using (StringFormat stringFormat = new StringFormat(StringFormatFlags.NoWrap))
                                {
                                    stringFormat.Alignment = StringAlignment.Center;
                                    stringFormat.LineAlignment = StringAlignment.Center;
                                    if (!string.IsNullOrEmpty(this.Text))
                                        g.DrawString(this.Text, this.Font, Brushes.Black, this.ClientRectangle, stringFormat);
                                    else
                                    {
                                        int percent = (int)(((double)Value / (double)Maximum) * 100);
                                        g.DrawString(percent.ToString() + "%", this.Font, Brushes.Black, this.ClientRectangle, stringFormat);
                                    }
                                }
                            }
                        }
	                }
	            }
              
                public string TextOverlay
                {
                    get
                    {
                        return base.Text;
                    }
                    set
                    {
                        base.Text = value;
                        Invalidate();
                    }
                }
	        }
        }
"@ -IgnoreWarnings | Out-Null
	}
	#endregion Define SAPIEN Types

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formLogCopyGUI10 = New-Object 'System.Windows.Forms.Form'
	$label1 = New-Object 'System.Windows.Forms.Label'
	$progressbaroverlay1 = New-Object 'SAPIENTypes.ProgressBarOverlay'
	$buttonCopy = New-Object 'System.Windows.Forms.Button'
	$statusbar1 = New-Object 'System.Windows.Forms.StatusBar'
	$groupbox2 = New-Object 'System.Windows.Forms.GroupBox'
	$txtSource = New-Object 'System.Windows.Forms.TextBox'
	$labelSourcePath = New-Object 'System.Windows.Forms.Label'
	$btnDestination = New-Object 'System.Windows.Forms.Button'
	$textbox2 = New-Object 'System.Windows.Forms.TextBox'
	$labelDestinationPath = New-Object 'System.Windows.Forms.Label'
	$groupbox1 = New-Object 'System.Windows.Forms.GroupBox'
	$labelUnReachableServers = New-Object 'System.Windows.Forms.Label'
	$listbox2 = New-Object 'System.Windows.Forms.ListBox'
	$listbox1 = New-Object 'System.Windows.Forms.ListBox'
	$BtnBrowser = New-Object 'System.Windows.Forms.Button'
	$labelReachableServers = New-Object 'System.Windows.Forms.Label'
	$textboxFile = New-Object 'System.Windows.Forms.TextBox'
	$labelFilePath = New-Object 'System.Windows.Forms.Label'
	$btnExit = New-Object 'System.Windows.Forms.Button'
	$menustrip1 = New-Object 'System.Windows.Forms.MenuStrip'
	$openfiledialog2 = New-Object 'System.Windows.Forms.OpenFileDialog'
	$errorprovider1 = New-Object 'System.Windows.Forms.ErrorProvider'
	$fileToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$openFileToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$helpToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$aboutToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$exitToolStripMenuItem = New-Object 'System.Windows.Forms.ToolStripMenuItem'
	$folderbrowserdialog1 = New-Object 'System.Windows.Forms.FolderBrowserDialog'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formLogCopyGUI10_Load = {
		#TODO: Initialize Form Controls here
		$global:ScriptPath = split-path $SCRIPT:MyInvocation.MyCommand.Path -parent
		
		$btnDestination.Enabled = $false
		$buttonCopy.Enabled = $false
		
		$txtSource.Text = "C:\Windows\CCM\LOGS"
		
		$Global:logfile = "$global:ScriptPath\LOGCOPY_Events.log"
		log "LOG file path $global:logfile"
		$global:UserName = $env:USERNAME
		$label1.Text = "Hello! $UserName"
		
		$global:Live
		$global:offline
		
		
	}
	#StatusBar Progress
	function Statusbar
	{
		$progressbar1Value = $progressbaroverlay1.Value
		$progressbaroverlay1.Value = $progressbar1Value + $Global:percent
		
		$progressbar1Value = $progressbaroverlay1.Value
		$statusbar1.Text = "Progressbar value is $progressbar1Value"
		
		
	}
	
	# Log file functions
	function log($string, $color)
	{
		
		if ($color -eq $null) { $color = "white" }
		
		#Write-Host $(Get-Date -format "dd-MMM-yyyy-HH-mm") $string -foregroundcolor $color
		
		$date = $(Get-Date -format "dd-MMM-yyyy HH:mm:ss")
		
		$string = $date + " " + $string
		
		$string | out-file -Filepath "$logfile" -append
		
	}
	
	$btnExit_Click = {
		#TODO: Place custom script here
		$Check_Robocopy = Get-Process -Name robocopy -ErrorAction SilentlyContinue
		If ($? -eq $true)
		{
			$CopyStatus = $true
		}
		
		if ([System.Windows.Forms.MessageBox]::Show("Are you sure Want to Close the Application ?", "Confirm Close", [System.Windows.Forms.MessageBoxButtons]::YesNo) -eq 'Yes')
		{
			if ($CopyStatus -eq $true)
			{
				kill $Check_Robocopy.ID
			}
			
			log "btnExit_Click:User Closing Application while Robocopy Running."
			$formLogCopyGUI10.Close()
			
		}
		else
		{
			
			log "Not Closing Program"
			
			
		}
		
		
	}
	
	
	
	$BtnBrowser_Click = {
		#TODO: Place custom script here
		$textboxFile.Text = ""
		$listbox1.Items.Clear()
		$listbox2.Items.Clear()
		$progressbaroverlay1.Value = 0
		Try
		{
			
			
			if ($openfiledialog2.ShowDialog() -eq 'OK')
			{
				$textboxFile.Text = $openfiledialog2.FileName
						
				Log "Browser_Click:Input File Selected $($textboxFile.text)"
				$statusbar1.Text = $textboxFile.Text
				
			}
			
			
			#$Global:Path = $textboxFile.Text
			
			Log "Browser_Click:Extracing Computer Name From File."
			#$Global:Computerlist = Get-Content $Global:Path
			$Global:Computerlist = Get-Content $textboxFile.Text
			
			If (!($global:Computerlist))
			{
				$global:FilStatus = $false
				Log "Browser_Click:Input File is Blank"
				$statusbar1.Text = "Input File is Blank"
				[void][System.Windows.Forms.MessageBox]::Show('Input File is Blank', 'Blank File') # Casting the method to [void] suppresses the output. 
			}
			else
			{
				Log "Browser_Click:Calling ping Computer Function"
				$labelFilePath.ForeColor = 'White'
				$errorprovider1.Clear()
				$global:UniqueComputer = $Computerlist | select -Unique
				Checklive-Computer $global:UniqueComputer
			}
		}
		Catch
		{
			$errorprovider1.SetIconAlignment($BtnBrowser, 'MiddleLeft')
			$errorprovider1.SetError($BtnBrowser, $($_.exception.message))
			$statusbar1.Text = $_.Exception.Message
			Log "Browser_Click:($_.Exception.Message)"
			$labelFilePath.ForeColor = 'Red'
			[void][System.Windows.Forms.MessageBox]::Show("File not Provided", "File Path Missing")
		}
		
		
		
		
	}
	
	
	function Checklive-Computer ($Computername)
	{
		
		
		
		foreach ($comp in $Computername)
		{
			try
			{
				
				$status = Test-Connection -BufferSize 32 -Count 1 -ComputerName $comp -Quiet
				
				If ($status -eq $true)
				{
					
					$global:Live += $comp
					
					Update-ListBox -ListBox $listbox1 -Items $comp -Append
					
					Log "Live Computer:$comp"
					$statusbar1.Text = "Ping Successfull:$comp"
					
				}
				Else
				{
					$global:offline += $comp
					Update-ListBox -ListBox $listbox2 -Items $comp -Append
					Log "Offline Computer:$comp"
					$statusbar1.Text = "Ping Failed:$comp"
				}
			}
			Catch
			{
				
				$errorprovider1.SetIconAlignment($BtnBrowser, 'MiddleLeft')
				$errorprovider1.SetError($BtnBrowser, $($_.exception.message))
			}
			
			
		}
		#Update-ListBox -ListBox $listbox1 -Items $global:Live -Append
		#Update-ListBox -ListBox $listbox2 -Items $global:offline -Append
		
		$statusbar1.Text = "Ping Check Done."
		Log "Ping Check Done."
		[void][System.Windows.Forms.MessageBox]::Show("Ping Check Done. Now Select Destination Path", "Ping Check Done")
		$btnDestination.Enabled = $true
		
		
		
	}
	
	
	
	
	
	
	
	
	
	$openFileToolStripMenuItem_Click = {
		#TODO: Place custom script here
		#TODO: Place custom script here
		$textboxFile.Text = ""
		$listbox1.Items.Clear()
		$listbox2.Items.Clear()
		$progressbaroverlay1.Value = 0
		Try
		{
			
			
			if ($openfiledialog2.ShowDialog() -eq 'OK')
			{
				$textboxFile.Text = $openfiledialog2.FileName
				Log "Browser_Click:Input File Selected $($textboxFile.text)"
				$statusbar1.Text = $textboxFile.Text
				
			}
			
			
			#$Global:Path = $textboxFile.Text
			
			Log "Browser_Click:Extracing Computer Name From File."
			#$Global:Computerlist = Get-Content $Global:Path
			$Global:Computerlist = Get-Content $textboxFile.Text
			
			If (!($global:Computerlist))
			{
				$global:FilStatus = $false
				Log "Browser_Click:Input File is Blank"
				$statusbar1.Text = "Input File is Blank"
				[void][System.Windows.Forms.MessageBox]::Show('Input File is Blank', 'Blank File') # Casting the method to [void] suppresses the output. 
			}
			else
			{
				Log "Browser_Click:Calling ping Computer Function"
				$labelFilePath.ForeColor = 'White'
				$errorprovider1.Clear()
				$global:UniqueComputer = $Computerlist | select -Unique
				Checklive-Computer $global:UniqueComputer
			}
		}
		Catch
		{
			$errorprovider1.SetIconAlignment($BtnBrowser, 'MiddleLeft')
			$errorprovider1.SetError($BtnBrowser, $($_.exception.message))
			$statusbar1.Text = $_.Exception.Message
			Log "Browser_Click:($_.Exception.Message)"
			$labelFilePath.ForeColor = 'Red'
			[void][System.Windows.Forms.MessageBox]::Show("File not Provided", "File Path Missing")
		}
		
		
		
		
	}
	
	$btnDestination_Click = {
		#TODO: Place custom script here
		$folderbrowserdialog1.ShowDialog()
		log "Destination_Click:Click On Destination Folder Button"
		try
		{
			if ($folderbrowserdialog1.SelectedPath)
			{
				
				$textbox2.Text = $folderbrowserdialog1.SelectedPath
				$script:Destination = $textbox2.Text
				log "Destination_Click:Destination Path $script:Destination"
				$Script:testPath = Test-Path $Destination
				log "Destination_Click:Check Destination Path Exist"
				If ($testPath -eq $true)
				{
					$buttonCopy.Enabled = $true
					log "Destination_Click:Copy Button Enabled"
				}
			}
			Else
			{
				$statusbar1.Text = "Destination Folder not selected"
				log "Destination_Click:Destination Folder not selected"
				[void][System.Windows.Forms.MessageBox]::Show("Destination Folder not selected", "Destination Path Is Empty") # Casting the method to [void] suppresses the output. 
			}
		}
		catch
		{
			$errorprovider1.SetIconAlignment($btnDestination, 'MiddleLeft')
			$errorprovider1.SetError($btnDestination, $($Error.exception.message))
			$statusbar1.Text = $($Error.exception.message)
			log "$($Error.exception.message)"
		}
		
		
		
		
		
		
		
		
	}
	
	$exitToolStripMenuItem_Click = {
		#TODO: Place custom script here
		$Check_Robocopy = Get-Process -Name robocopy -ErrorAction SilentlyContinue
		If ($? -eq $true)
		{
			$CopyStatus = $true
		}
		
		if ([System.Windows.Forms.MessageBox]::Show("Are you sure Want to Close the Application ?", "Confirm Close", [System.Windows.Forms.MessageBoxButtons]::YesNo) -eq 'Yes')
		{
			if ($CopyStatus -eq $true)
			{
				kill $Check_Robocopy.ID
			}
			
			log "btnExit_Click:User Closing Application while Robocopy Running."
			$formLogCopyGUI10.Close()
			
		}
		else
		{
			
			log "Not Closing Program"
			
			
		}
	}
	
	#region Control Helper Functions
	function Show-NotifyIcon
	{
	<#
		.SYNOPSIS
			Displays a NotifyIcon's balloon tip message in the taskbar's notification area.
		
		.DESCRIPTION
			Displays a NotifyIcon's a balloon tip message in the taskbar's notification area.
			
		.PARAMETER NotifyIcon
	     	The NotifyIcon control that will be displayed.
		
		.PARAMETER BalloonTipText
	     	Sets the text to display in the balloon tip.
		
		.PARAMETER BalloonTipTitle
			Sets the Title to display in the balloon tip.
		
		.PARAMETER BalloonTipIcon	
			The icon to display in the ballon tip.
		
		.PARAMETER Timeout	
			The time the ToolTip Balloon will remain visible in milliseconds. 
			Default: 0 - Uses windows default.
	#>
		 param(
		  [Parameter(Mandatory = $true, Position = 0)]
		  [ValidateNotNull()]
		  [System.Windows.Forms.NotifyIcon]$NotifyIcon,
		  [Parameter(Mandatory = $true, Position = 1)]
		  [ValidateNotNullOrEmpty()]
		  [String]$BalloonTipText,
		  [Parameter(Position = 2)]
		  [String]$BalloonTipTitle = '',
		  [Parameter(Position = 3)]
		  [System.Windows.Forms.ToolTipIcon]$BalloonTipIcon = 'None',
		  [Parameter(Position = 4)]
		  [int]$Timeout = 0
	 	)
		
		if($null -eq $NotifyIcon.Icon)
		{
			#Set a Default Icon otherwise the balloon will not show
			$NotifyIcon.Icon = [System.Drawing.Icon]::ExtractAssociatedIcon([System.Windows.Forms.Application]::ExecutablePath)
		}
		
		$NotifyIcon.ShowBalloonTip($Timeout, $BalloonTipTitle, $BalloonTipText, $BalloonTipIcon)
	}
	
	
	
	function Update-ListBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ListBox or CheckedListBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
		
		.PARAMETER ListBox
			The ListBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ListBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ListBox $listBox1 "Red" -Append
			Update-ListBox $listBox1 "White" -Append
			Update-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Update-ListBox $listBox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ListBox]$ListBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if (-not $Append)
		{
			$listBox.Items.Clear()
		}
		
		if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
		{
			$listBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$listBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$listBox.Items.Add($obj)
			}
			$listBox.EndUpdate()
		}
		else
		{
			$listBox.Items.Add($Items)
		}
		
		$listBox.DisplayMember = $DisplayMember
	}
	
	
	
	#endregion
	
	
	$btnExit_MouseHover = {
		#TODO: Place custom script here
		$statusbar1.Text = "Do you want to close the Application"
	}
	
	$formLogCopyGUI10_MouseHover = {
		#TODO: Place custom script here
		$statusbar1.Text = ""
	}
	
	$textboxFile_MouseHover = {
		#TODO: Place custom script here
		if ($textboxFile -eq $null)
		{
			$statusbar1.Text = "Select Computer List"
		}
		Else
		{
			$statusbar1.Text = " "
		}
		
		
	}
	
	$BtnBrowser_MouseHover = {
		#TODO: Place custom script here
		$statusbar1.Text = "Click to select computer list."
	}
	
	$addSingleServerToolStripMenuItem_Click = {
		#TODO: Place custom script here
		
	}
	
	$buttonCopy_Click = {
		#TODO: Place custom script here
		
		$progressbaroverlay1.Value = 0
		#$script:SourcePath = "C:\Windows\CCM\LOGS\"
		
		$script:Destinationpath = $textbox2.Text
		Log "Copy_Click:Destination path $script:Destinationpath"
		
		for ($i = 0; $i -lt $listbox1.Items.Count; $i++)
		{
			
			$TempHostname = $listbox1.Items[$i]
			log "Copy_Click:Working on Server $TempHostname"
			$serverCount = $listbox1.Items.Count
			log "Copy_Click:Total number of Servers $TempHostname"
			$Global:percent = (100/$serverCount)
			$progressbaroverlay1.Maximum = ($serverCount * $percent)
			
			
			If (($TempHostname -eq $null) -and ($textboxFile.Text -eq $null))
			{
				
				$Status = $false
				$errorprovider1.SetIconAlignment($btnDestination, 'MiddleLeft')
				$errorprovider1.SetError($btnDestination, "File not Found")
				Log "Copy_Click:Input File is missing"
				$statusbar1.Text = "Input file is Missing "
			}
			Else
			{
				
				
				Statusbar
				
				$pValue = (($count / $serverCount) * 100)
				
				
				$Spath = "\\$TempHostname\C$\Windows\ccm\logs"
				
				log "Copy_Click:SourcePath: $Spath"
				
				#$SourcePath = "C:\Windows\CCM\LOGS\"
				
				IF (Test-Path $Spath)
				{
					
					try
					{
						
						$txtSource.Text = $Spath
						$Destinationpath = "$($textbox2.Text)\$TempHostname"
						$statusbar1.Text = "Copying Log files...$TempHostname"
						#[String]$Arg = "/Minage:15 /LOG+:$ScriptPath\Copylog.log"
						
						log "Copy_Click:Copying Log files...$TempHostname"
						& Robocopy $Spath $Destinationpath /Minage:15 /LOG+:$ScriptPath\Copylog.log
						#Robocopy $Spath $Destinationpath $Arg
						
						
						$logcheck = Get-Content $ScriptPath\Copylog.log
						$logcheck | Out-File $ScriptPath\Copylog1.log -Append
						
						if ($logcheck -like "*Error*")
						{
							Log "Copy_Click:Copying Failed on server:$TempHostname"
							$Status = $false
							$global:failedserver += "$TempHostname|"
						}
						else
						{
							Log "Copy_Click:Copying Done on server:$TempHostname"
							$Status = $true
						}
						Remove-Item $ScriptPath\Copylog.log -Recurse -Force
						
					}
					catch
					{
						[void][System.Windows.Forms.MessageBox]::Show("$($Error.Exception.Message)", "Error!") # Casting the method to [void] suppresses the output. 		
						log "Copy_Click:$($Error.Exception.Message)"
					}
				}
				else
				{
					
					[void][System.Windows.Forms.MessageBox]::Show("User not have permission or Path not exist", "Error!") # Casting the method to [void] suppresses the output. 			
					log "User not have permission or Path not exist"
				}
				
				
				
				$count++
			}
			
			
		}
		
		#Write-Progress -activity "copying files from $TempHostname" -Completed -Status "Completed"
		
		if ($Status -eq $true)
		{
			$loginfcheck = Get-Content $ScriptPath\Copylog1.log
			if ($loginfcheck -like '*error*')
			{
				[void][System.Windows.Forms.MessageBox]::Show("File copy Failed. $failedserver Log File Created at $ScriptPath\Copylog1.log", "Copy Status") # Casting the method to [void] suppresses the output. 
				$statusbar1.Text = "Log File Created at $ScriptPath\Copylog1.log"
			}
			else
			{
				[void][System.Windows.Forms.MessageBox]::Show("File copy Done. Log File Created at $ScriptPath\Copylog1.log", "Copy Status") # Casting the method to [void] suppresses the output. 
				$statusbar1.Text = "Log File Created at $ScriptPath\Copylog1.log"
			}
			log "Log File Created at $ScriptPath\Copylog1.log"
		}
		
		
		
		
	}
	
	$aboutToolStripMenuItem_Click = {
		#TODO: Place custom script here
		
		#------------------------------------------------------------------------
		# Source File Information (DO NOT MODIFY)
		# Source ID: 9d1a3c18-c1a4-416b-98a5-cbf508c6630b
		# Source File: C:\Scripts\Multiform Copy Logs\About.psf
		#------------------------------------------------------------------------
		
	<#
	    .NOTES
	    --------------------------------------------------------------------------------
	     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2017 v5.4.144
	     Generated on:       7/9/2018 5:01 PM
	     Generated by:       Administrator
	    --------------------------------------------------------------------------------
	    .DESCRIPTION
	        GUI script generated by PowerShell Studio 2017
	#>
		
		
		#----------------------------------------------
		#region Application Functions
		#----------------------------------------------
		
		#endregion Application Functions
		
		#----------------------------------------------
		# Generated Form Function
		#----------------------------------------------
		function Show-About_psf
		{
			
			#----------------------------------------------
			#region Import the Assemblies
			#----------------------------------------------
			[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
			[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
			[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
			#endregion Import Assemblies
			
			#----------------------------------------------
			#region Generated Form Objects
			#----------------------------------------------
			[System.Windows.Forms.Application]::EnableVisualStyles()
			$formAbout = New-Object 'System.Windows.Forms.Form'
			$labelLogCopyGUI10 = New-Object 'System.Windows.Forms.Label'
			$picturebox1 = New-Object 'System.Windows.Forms.PictureBox'
			$buttonOK = New-Object 'System.Windows.Forms.Button'
			$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
			#endregion Generated Form Objects
			
			#----------------------------------------------
			# User Generated Script
			#----------------------------------------------
			
			$formAbout_Load = {
				#TODO: Initialize Form Controls here
				
			}
			
			# --End User Generated Script--
			#----------------------------------------------
			#region Generated Events
			#----------------------------------------------
			
			$Form_StateCorrection_Load =
			{
				#Correct the initial state of the form to prevent the .Net maximized form issue
				$formAbout.WindowState = $InitialFormWindowState
			}
			
			$Form_Cleanup_FormClosed =
			{
				#Remove all event handlers from the controls
				try
				{
					$formAbout.remove_Load($formAbout_Load)
					$formAbout.remove_Load($Form_StateCorrection_Load)
					$formAbout.remove_FormClosed($Form_Cleanup_FormClosed)
				}
				catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
			}
			#endregion Generated Events
			
			#----------------------------------------------
			#region Generated Form Code
			#----------------------------------------------
			$formAbout.SuspendLayout()
			#
			# formAbout
			#
			$formAbout.Controls.Add($labelLogCopyGUI10)
			$formAbout.Controls.Add($picturebox1)
			$formAbout.Controls.Add($buttonOK)
			$formAbout.AcceptButton = $buttonOK
			$formAbout.AutoScaleDimensions = '11, 28'
			$formAbout.AutoScaleMode = 'Font'
			$formAbout.BackColor = 'ButtonHighlight'
			$formAbout.ClientSize = '417, 349'
			$formAbout.Font = 'Segoe UI, 12pt'
			$formAbout.FormBorderStyle = 'FixedDialog'
			$formAbout.Margin = '7, 8, 7, 8'
			$formAbout.MaximizeBox = $False
			$formAbout.MinimizeBox = $False
			$formAbout.Name = 'formAbout'
			$formAbout.StartPosition = 'CenterScreen'
			$formAbout.Text = 'About'
			$formAbout.add_Load($formAbout_Load)
			#
			# labelLogCopyGUI10
			#
			$labelLogCopyGUI10.AutoSize = $True
			$labelLogCopyGUI10.Location = '173, 170'
			$labelLogCopyGUI10.Margin = '6, 0, 6, 0'
			$labelLogCopyGUI10.Name = 'labelLogCopyGUI10'
			$labelLogCopyGUI10.Size = '160, 33'
			$labelLogCopyGUI10.TabIndex = 2
			$labelLogCopyGUI10.Text = 'LogCopy GUI 1.0'
			$labelLogCopyGUI10.UseCompatibleTextRendering = $True
			#
			# picturebox1
			#
			#region Binary Data
			$picturebox1.Image = [System.Convert]::FromBase64String('
iVBORw0KGgoAAAANSUhEUgAABAAAAAMACAIAAAA12IJaAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AACVqklEQVR4Xu39d3wU
5f7////++74F9ZzzOecIgdDsvXs0oQYBkSSAIKBiQ8Xee+9dURRICD0JvVcFpEkHaQm9955tyfad
ufK7ZndAmFBSdje7O4/7+3XjjRzYmZ3d7L6eM9dc1/+vFAAAAIBpEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCAAAA
AABMhAAAAAAAmAgBAAAAADARAgAAAABgIgQAAAAAwEQIAAAAAICJEAAAAAAAEyEAAAAAACZCADA7
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
EQDKRYaBPUdKJi/Z89aAlW3enXnlY+NkHrgwM69GRm4Nbcy9VoZmvUqVeWI0f0aurH90yE/qNuqm
Zybd/9ncL4av/W3l/v3HnHKX9J0DAAAAyo0AUD6n3EcrO+9jds+a7UWj5u/8NH/tI9/92eLN3655
YkLdbqP/2WG4bN8vaJd3wb258tca6XnBE/ZnrZrBgfva32+XW6OdFiH+0X54UtfRVz42PuXlafd/
Pu+NnBX9p2+et/bQ1v12p8cfPM0f2hO6fwAAAFQGAaCqZE/u8gZkJNh5qHj1tuPTl+8bMnPb92MK
Pxi6+sU+yx7/YWHnz+a2/+iPNu/MPLXafzyn02dze/yw8KW+yz4cuvr7MesH/b516tJ9K7cc337Q
cdjqLnb7Vc7xAwAAINwIAGF12oSbQhVCUUVAUf0B1etXTi35J/LPZYt/6uB9zusDAAAg0ggAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADARAgAAAAA
gIkQAAAAAAATIQAAAAAAJkIAAAAAAEyEAAAAAACYCAEAAAAAMBECAAAAAGAiBAAAAADANEpL//+9
XK1kWiwwyQAAAABJRU5ErkJggg==')
			#endregion
			$picturebox1.Location = '71, 48'
			$picturebox1.Margin = '6, 6, 6, 6'
			$picturebox1.Name = 'picturebox1'
			$picturebox1.Size = '262, 197'
			$picturebox1.SizeMode = 'Zoom'
			$picturebox1.TabIndex = 1
			$picturebox1.TabStop = $False
			#
			# buttonOK
			#
			$buttonOK.Anchor = 'Bottom, Right'
			$buttonOK.DialogResult = 'OK'
			$buttonOK.Location = '258, 273'
			$buttonOK.Margin = '6, 7, 6, 7'
			$buttonOK.Name = 'buttonOK'
			$buttonOK.Size = '138, 49'
			$buttonOK.TabIndex = 0
			$buttonOK.Text = '&OK'
			$buttonOK.UseCompatibleTextRendering = $True
			$buttonOK.UseVisualStyleBackColor = $True
			$formAbout.ResumeLayout()
			#endregion Generated Form Code
			
			#----------------------------------------------
			
			#Save the initial state of the form
			$InitialFormWindowState = $formAbout.WindowState
			#Init the OnLoad event to correct the initial state of the form
			$formAbout.add_Load($Form_StateCorrection_Load)
			#Clean up the control events
			$formAbout.add_FormClosed($Form_Cleanup_FormClosed)
			#Show the Form
			return $formAbout.ShowDialog()
			
		} #End Function
		
		#Call the form
		Show-About_psf | Out-Null
		
		
		
	}
	
	
	
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formLogCopyGUI10.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonCopy.remove_Click($buttonCopy_Click)
			$btnDestination.remove_Click($btnDestination_Click)
			$BtnBrowser.remove_Click($BtnBrowser_Click)
			$BtnBrowser.remove_MouseHover($BtnBrowser_MouseHover)
			$textboxFile.remove_MouseHover($textboxFile_MouseHover)
			$btnExit.remove_Click($btnExit_Click)
			$btnExit.remove_MouseHover($btnExit_MouseHover)
			$formLogCopyGUI10.remove_Load($formLogCopyGUI10_Load)
			$formLogCopyGUI10.remove_MouseHover($formLogCopyGUI10_MouseHover)
			$openFileToolStripMenuItem.remove_Click($openFileToolStripMenuItem_Click)
			$aboutToolStripMenuItem.remove_Click($aboutToolStripMenuItem_Click)
			$exitToolStripMenuItem.remove_Click($exitToolStripMenuItem_Click)
			$formLogCopyGUI10.remove_Load($Form_StateCorrection_Load)
			$formLogCopyGUI10.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formLogCopyGUI10.SuspendLayout()
	$groupbox2.SuspendLayout()
	$groupbox1.SuspendLayout()
	$menustrip1.SuspendLayout()
	#
	# formLogCopyGUI10
	#
	$formLogCopyGUI10.Controls.Add($label1)
	$formLogCopyGUI10.Controls.Add($progressbaroverlay1)
	$formLogCopyGUI10.Controls.Add($buttonCopy)
	$formLogCopyGUI10.Controls.Add($statusbar1)
	$formLogCopyGUI10.Controls.Add($groupbox2)
	$formLogCopyGUI10.Controls.Add($groupbox1)
	$formLogCopyGUI10.Controls.Add($btnExit)
	$formLogCopyGUI10.Controls.Add($menustrip1)
	$formLogCopyGUI10.AutoScaleDimensions = '8, 17'
	$formLogCopyGUI10.AutoScaleMode = 'Font'
	$formLogCopyGUI10.BackColor = 'SteelBlue'
	$formLogCopyGUI10.ClientSize = '556, 620'
	$formLogCopyGUI10.FormBorderStyle = 'SizableToolWindow'
	$formLogCopyGUI10.MainMenuStrip = $menustrip1
	$formLogCopyGUI10.Name = 'formLogCopyGUI10'
	$formLogCopyGUI10.Opacity = 0.95
	$formLogCopyGUI10.StartPosition = 'CenterScreen'
	$formLogCopyGUI10.Text = 'LogCopy GUI 1.0'
	$formLogCopyGUI10.TransparencyKey = 'Silver'
	$formLogCopyGUI10.add_Load($formLogCopyGUI10_Load)
	$formLogCopyGUI10.add_MouseHover($formLogCopyGUI10_MouseHover)
	#
	# label1
	#
	$label1.AutoSize = $True
	$label1.ForeColor = 'White'
	$label1.Location = '30, 45'
	$label1.Margin = '4, 0, 4, 0'
	$label1.Name = 'label1'
	$label1.Size = '43, 21'
	$label1.TabIndex = 14
	$label1.Text = 'label1'
	$label1.UseCompatibleTextRendering = $True
	#
	# progressbaroverlay1
	#
	$progressbaroverlay1.BackColor = 'SteelBlue'
	$progressbaroverlay1.Location = '0, 562'
	$progressbaroverlay1.Margin = '4, 4, 4, 4'
	$progressbaroverlay1.Name = 'progressbaroverlay1'
	$progressbaroverlay1.Size = '556, 30'
	$progressbaroverlay1.Style = 'Continuous'
	$progressbaroverlay1.TabIndex = 13
	#
	# buttonCopy
	#
	$buttonCopy.Location = '30, 481'
	$buttonCopy.Margin = '4, 4, 4, 4'
	$buttonCopy.Name = 'buttonCopy'
	$buttonCopy.Size = '131, 55'
	$buttonCopy.TabIndex = 12
	$buttonCopy.Text = '&Copy'
	$buttonCopy.UseCompatibleTextRendering = $True
	$buttonCopy.UseVisualStyleBackColor = $True
	$buttonCopy.add_Click($buttonCopy_Click)
	#
	# statusbar1
	#
	$statusbar1.Location = '0, 591'
	$statusbar1.Margin = '4, 4, 4, 4'
	$statusbar1.Name = 'statusbar1'
	$statusbar1.Size = '556, 29'
	$statusbar1.TabIndex = 11
	$statusbar1.Text = 'LogCopy GUI 1.0'
	#
	# groupbox2
	#
	$groupbox2.Controls.Add($txtSource)
	$groupbox2.Controls.Add($labelSourcePath)
	$groupbox2.Controls.Add($btnDestination)
	$groupbox2.Controls.Add($textbox2)
	$groupbox2.Controls.Add($labelDestinationPath)
	$groupbox2.ForeColor = 'ControlLightLight'
	$groupbox2.Location = '30, 339'
	$groupbox2.Margin = '4, 4, 4, 4'
	$groupbox2.Name = 'groupbox2'
	$groupbox2.Padding = '4, 4, 4, 4'
	$groupbox2.Size = '498, 122'
	$groupbox2.TabIndex = 8
	$groupbox2.TabStop = $False
	$groupbox2.Text = 'File Path'
	$groupbox2.UseCompatibleTextRendering = $True
	#
	# txtSource
	#
	$txtSource.AutoCompleteMode = 'SuggestAppend'
	$txtSource.AutoCompleteSource = 'FileSystem'
	$txtSource.Enabled = $False
	$txtSource.ForeColor = 'WindowText'
	$txtSource.Location = '156, 35'
	$txtSource.Margin = '4, 4, 4, 4'
	$txtSource.Name = 'txtSource'
	$txtSource.Size = '275, 23'
	$txtSource.TabIndex = 9
	#
	# labelSourcePath
	#
	$labelSourcePath.AutoSize = $True
	$labelSourcePath.Font = 'Microsoft Sans Serif, 10.2pt'
	$labelSourcePath.ForeColor = 'ControlLightLight'
	$labelSourcePath.Location = '9, 36'
	$labelSourcePath.Margin = '4, 0, 4, 0'
	$labelSourcePath.Name = 'labelSourcePath'
	$labelSourcePath.Size = '102, 25'
	$labelSourcePath.TabIndex = 8
	$labelSourcePath.Text = 'Source Path'
	$labelSourcePath.UseCompatibleTextRendering = $True
	#
	# btnDestination
	#
	$btnDestination.ForeColor = 'ActiveCaptionText'
	$btnDestination.Location = '439, 74'
	$btnDestination.Margin = '4, 4, 4, 4'
	$btnDestination.Name = 'btnDestination'
	$btnDestination.Size = '39, 23'
	$btnDestination.TabIndex = 7
	$btnDestination.Text = '...'
	$btnDestination.UseCompatibleTextRendering = $True
	$btnDestination.UseVisualStyleBackColor = $True
	$btnDestination.add_Click($btnDestination_Click)
	#
	# textbox2
	#
	$textbox2.AutoCompleteMode = 'SuggestAppend'
	$textbox2.AutoCompleteSource = 'FileSystem'
	$textbox2.Location = '156, 75'
	$textbox2.Margin = '4, 4, 4, 4'
	$textbox2.Name = 'textbox2'
	$textbox2.Size = '275, 23'
	$textbox2.TabIndex = 6
	#
	# labelDestinationPath
	#
	$labelDestinationPath.AutoSize = $True
	$labelDestinationPath.Font = 'Microsoft Sans Serif, 10.2pt'
	$labelDestinationPath.ForeColor = 'ControlLightLight'
	$labelDestinationPath.Location = '9, 76'
	$labelDestinationPath.Margin = '4, 0, 4, 0'
	$labelDestinationPath.Name = 'labelDestinationPath'
	$labelDestinationPath.Size = '135, 25'
	$labelDestinationPath.TabIndex = 5
	$labelDestinationPath.Text = 'Destination Path'
	$labelDestinationPath.UseCompatibleTextRendering = $True
	#
	# groupbox1
	#
	$groupbox1.Controls.Add($labelUnReachableServers)
	$groupbox1.Controls.Add($listbox2)
	$groupbox1.Controls.Add($listbox1)
	$groupbox1.Controls.Add($BtnBrowser)
	$groupbox1.Controls.Add($labelReachableServers)
	$groupbox1.Controls.Add($textboxFile)
	$groupbox1.Controls.Add($labelFilePath)
	$groupbox1.ForeColor = 'ControlLightLight'
	$groupbox1.Location = '30, 70'
	$groupbox1.Margin = '4, 4, 4, 4'
	$groupbox1.Name = 'groupbox1'
	$groupbox1.Padding = '4, 4, 4, 4'
	$groupbox1.Size = '496, 261'
	$groupbox1.TabIndex = 7
	$groupbox1.TabStop = $False
	$groupbox1.Text = 'Server List'
	$groupbox1.UseCompatibleTextRendering = $True
	#
	# labelUnReachableServers
	#
	$labelUnReachableServers.AutoSize = $True
	$labelUnReachableServers.Font = 'Microsoft Sans Serif, 10.2pt'
	$labelUnReachableServers.ForeColor = 'ControlLightLight'
	$labelUnReachableServers.Location = '255, 67'
	$labelUnReachableServers.Margin = '4, 0, 4, 0'
	$labelUnReachableServers.Name = 'labelUnReachableServers'
	$labelUnReachableServers.Size = '183, 25'
	$labelUnReachableServers.TabIndex = 14
	$labelUnReachableServers.Text = 'Un-Reachable Servers'
	$labelUnReachableServers.UseCompatibleTextRendering = $True
	#
	# listbox2
	#
	$listbox2.FormattingEnabled = $True
	$listbox2.ItemHeight = 17
	$listbox2.Location = '255, 96'
	$listbox2.Margin = '4, 4, 4, 4'
	$listbox2.Name = 'listbox2'
	$listbox2.Size = '211, 157'
	$listbox2.TabIndex = 13
	#
	# listbox1
	#
	$listbox1.FormattingEnabled = $True
	$listbox1.ItemHeight = 17
	$listbox1.Location = '21, 94'
	$listbox1.Margin = '4, 4, 4, 4'
	$listbox1.Name = 'listbox1'
	$listbox1.Size = '201, 157'
	$listbox1.TabIndex = 12
	#
	# BtnBrowser
	#
	$BtnBrowser.ForeColor = 'ActiveCaptionText'
	$BtnBrowser.Location = '439, 34'
	$BtnBrowser.Margin = '4, 4, 4, 4'
	$BtnBrowser.Name = 'BtnBrowser'
	$BtnBrowser.Size = '39, 23'
	$BtnBrowser.TabIndex = 4
	$BtnBrowser.Text = '...'
	$BtnBrowser.UseCompatibleTextRendering = $True
	$BtnBrowser.UseVisualStyleBackColor = $True
	$BtnBrowser.add_Click($BtnBrowser_Click)
	$BtnBrowser.add_MouseHover($BtnBrowser_MouseHover)
	#
	# labelReachableServers
	#
	$labelReachableServers.AutoSize = $True
	$labelReachableServers.Font = 'Microsoft Sans Serif, 10.2pt'
	$labelReachableServers.ForeColor = 'ControlLightLight'
	$labelReachableServers.Location = '21, 65'
	$labelReachableServers.Margin = '4, 0, 4, 0'
	$labelReachableServers.Name = 'labelReachableServers'
	$labelReachableServers.Size = '155, 25'
	$labelReachableServers.TabIndex = 2
	$labelReachableServers.Text = 'Reachable Servers'
	$labelReachableServers.UseCompatibleTextRendering = $True
	#
	# textboxFile
	#
	$textboxFile.AutoCompleteMode = 'SuggestAppend'
	$textboxFile.AutoCompleteSource = 'FileSystem'
	$textboxFile.BackColor = 'Window'
	$textboxFile.Cursor = 'Default'
	$textboxFile.Location = '104, 33'
	$textboxFile.Margin = '4, 4, 4, 4'
	$textboxFile.Name = 'textboxFile'
	$textboxFile.Size = '327, 23'
	$textboxFile.TabIndex = 1
	$textboxFile.add_MouseHover($textboxFile_MouseHover)
	#
	# labelFilePath
	#
	$labelFilePath.AutoSize = $True
	$labelFilePath.Font = 'Microsoft Sans Serif, 10.2pt'
	$labelFilePath.ForeColor = 'ControlLightLight'
	$labelFilePath.Location = '21, 35'
	$labelFilePath.Margin = '4, 0, 4, 0'
	$labelFilePath.Name = 'labelFilePath'
	$labelFilePath.Size = '75, 25'
	$labelFilePath.TabIndex = 0
	$labelFilePath.Text = 'File Path'
	$labelFilePath.UseCompatibleTextRendering = $True
	#
	# btnExit
	#
	$btnExit.BackColor = 'Gainsboro'
	$btnExit.FlatAppearance.BorderColor = 'White'
	$btnExit.FlatAppearance.MouseDownBackColor = 'White'
	$btnExit.FlatAppearance.MouseOverBackColor = 'Control'
	$btnExit.Location = '401, 481'
	$btnExit.Margin = '4, 4, 4, 4'
	$btnExit.Name = 'btnExit'
	$btnExit.Size = '125, 55'
	$btnExit.TabIndex = 5
	$btnExit.Text = 'E&xit'
	$btnExit.UseCompatibleTextRendering = $True
	$btnExit.UseVisualStyleBackColor = $False
	$btnExit.add_Click($btnExit_Click)
	$btnExit.add_MouseHover($btnExit_MouseHover)
	#
	# menustrip1
	#
	$menustrip1.BackColor = 'Menu'
	[void]$menustrip1.Items.Add($fileToolStripMenuItem)
	[void]$menustrip1.Items.Add($helpToolStripMenuItem)
	$menustrip1.Location = '0, 0'
	$menustrip1.Name = 'menustrip1'
	$menustrip1.Padding = '8, 3, 0, 3'
	$menustrip1.Size = '556, 30'
	$menustrip1.TabIndex = 9
	$menustrip1.Text = 'menustrip1'
	#
	# openfiledialog2
	#
	$openfiledialog2.DefaultExt = 'txt'
	$openfiledialog2.Filter = 'Text File (.txt)|*.txt|All Files|*.*'
	$openfiledialog2.ShowHelp = $True
	#
	# errorprovider1
	#
	$errorprovider1.ContainerControl = $formLogCopyGUI10
	#
	# fileToolStripMenuItem
	#
	[void]$fileToolStripMenuItem.DropDownItems.Add($openFileToolStripMenuItem)
	[void]$fileToolStripMenuItem.DropDownItems.Add($exitToolStripMenuItem)
	$fileToolStripMenuItem.Name = 'fileToolStripMenuItem'
	$fileToolStripMenuItem.ShortcutKeys = [System.Windows.Forms.Keys]::O -bor [System.Windows.Forms.Keys]::Control 
	$fileToolStripMenuItem.Size = '44, 24'
	$fileToolStripMenuItem.Text = '&File'
	#
	# openFileToolStripMenuItem
	#
	$openFileToolStripMenuItem.Name = 'openFileToolStripMenuItem'
	$openFileToolStripMenuItem.ShortcutKeys = [System.Windows.Forms.Keys]::O -bor [System.Windows.Forms.Keys]::Control 
	$openFileToolStripMenuItem.Size = '194, 24'
	$openFileToolStripMenuItem.Text = '&Open File'
	$openFileToolStripMenuItem.add_Click($openFileToolStripMenuItem_Click)
	#
	# helpToolStripMenuItem
	#
	[void]$helpToolStripMenuItem.DropDownItems.Add($aboutToolStripMenuItem)
	$helpToolStripMenuItem.Name = 'helpToolStripMenuItem'
	$helpToolStripMenuItem.Size = '53, 24'
	$helpToolStripMenuItem.Text = '&Help'
	#
	# aboutToolStripMenuItem
	#
	$aboutToolStripMenuItem.Name = 'aboutToolStripMenuItem'
	$aboutToolStripMenuItem.ShortcutKeys = [System.Windows.Forms.Keys]::F1 
	$aboutToolStripMenuItem.Size = '152, 24'
	$aboutToolStripMenuItem.Text = '&About'
	$aboutToolStripMenuItem.add_Click($aboutToolStripMenuItem_Click)
	#
	# exitToolStripMenuItem
	#
	$exitToolStripMenuItem.Name = 'exitToolStripMenuItem'
	$exitToolStripMenuItem.ShortcutKeys = [System.Windows.Forms.Keys]::X -bor [System.Windows.Forms.Keys]::Control 
	$exitToolStripMenuItem.Size = '194, 24'
	$exitToolStripMenuItem.Text = 'E&xit'
	$exitToolStripMenuItem.add_Click($exitToolStripMenuItem_Click)
	#
	# folderbrowserdialog1
	#
	$menustrip1.ResumeLayout()
	$groupbox1.ResumeLayout()
	$groupbox2.ResumeLayout()
	$formLogCopyGUI10.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formLogCopyGUI10.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formLogCopyGUI10.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formLogCopyGUI10.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formLogCopyGUI10.ShowDialog()

} #End Function

#Call the form
Show-logcopy_psf | Out-Null
