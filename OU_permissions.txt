<##############################################################################
Amar Vaidya

##############################################################################>

Import-Module ActiveDirectory

# This array will hold the report output.
$report = @()

# Build a lookup hash table that holds all of the string names of the
# ObjectType GUIDs referenced in the security descriptors.

$schemaIDGUID = @{ }
### NEED TO RECONCILE THE CONFLICTS ###
$ErrorActionPreference = 'SilentlyContinue'
Get-ADObject -SearchBase (Get-ADRootDSE).schemaNamingContext -LDAPFilter '(schemaIDGUID=*)' -Properties name, schemaIDGUID |
ForEach-Object { $schemaIDGUID.add([System.GUID]$_.schemaIDGUID, $_.name) }


Get-ADObject -SearchBase "CN=Extended-Rights,$((Get-ADRootDSE).configurationNamingContext)" -LDAPFilter '(objectClass=controlAccessRight)' -Properties name, rightsGUID |
ForEach-Object { $schemaIDGUID.add([System.GUID]$_.rightsGUID, $_.name) }

$ErrorActionPreference = 'Continue'

# Get a list of all OUs.  Add in the root containers for good measure (users, computers, etc.).
$OUs = @(Get-ADDomain | Select-Object -ExpandProperty DistinguishedName)

$OUs += Get-ADOrganizationalUnit -Filter * | Select-Object -ExpandProperty DistinguishedName

$OUs += Get-ADObject -SearchBase (Get-ADDomain).DistinguishedName -SearchScope OneLevel -LDAPFilter '(objectClass=container)' | Select-Object -ExpandProperty DistinguishedName

# Loop through each of the OUs and retrieve their permissions.
# Add report columns to contain the OU path and string names of the ObjectTypes.
ForEach ($OU in $OUs)
{
	$report += Get-Acl -Path "AD:\$OU" |
	Select-Object -ExpandProperty Access |
	Select-Object @{ name = 'organizationalUnit'; expression = { $OU } }, `
				  @{ name = 'objectTypeName'; expression = { if ($_.objectType.ToString() -eq '00000000-0000-0000-0000-000000000000') { 'All' }
			Else { $schemaIDGUID.Item($_.objectType) } } }, `
				  @{ name = 'inheritedObjectTypeName'; expression = { $schemaIDGUID.Item($_.inheritedObjectType) } }, `
				  *
	
	$report | select ActiveDirectoryRights, IdentityReference, organizationalUnit | Export-Csv -Path "C:\test\OU_Permissions.csv" -NoTypeInformation -Append
}


Start-Process "C:\Test\OU_Permissions.csv"

